!!! transitional
html(lang='en', xmlns='http://www.w3.org/1999/xhtml')
	head
		title= title
		link(rel='stylesheet', href = '/css/styles.css')
		link(href='http://fonts.googleapis.com/css?family=Cabin+Sketch:bold', rel='stylesheet', type='text/css')
		link(href='http://fonts.googleapis.com/css?family=Architects+Daughter:regular', rel='stylesheet', type='text/css')
		meta(content='text/html; charset=utf-8', http-equiv='Content-Type')
		script(src='/js/socket.io.min.js')
		script(src='/js/cookie.js')
		script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js')
		script(type='text/javascript')
			var isFlashReady = false;
			window.onload = function() {
				var bg = ["#BE420E","#00248F","#001F17", "#206BA4", "#BBD9EE", "#3A4754"];
				var bgcolor = bg[Math.floor(Math.random()*bg.length)]
				document.body.style.background=bgcolor;
				$("#logo").css("color", bgcolor);
				
				
				setTimeout("checkStream()",30000);
			}

			var socket = new io.Socket(null, {port: 8081, rememberTransport: false});
			
			socket.on('connect', function(){
				
				//socket.send({sessionKey: '!{sessionKey}'});
			});
			socket.connect();
			socket.on('message', function(data){
				if (data.leaders)
				{
					writeLeaders(data.leaders);
				}
				else if (data.stats)
				{
					writeStats(data.stats);
				}
				else if (data.queue)
				{
					writeQueue(data.queue);
				}
				else if (data.message)
				{
					if (data.message == 'stopStream'){
						stopStream();
						addToQueue();
					}
					else if (data.message.substr(0,6) == 'stream'){
						startStream(data.message);
					}				
					else if (data.message == 'leaderboard'){
						writeAnnouncement('Congrats, you are on the leaderboard');
					}
				}
				
				
			});
			socket.on('disconnect', function () {
				console.log('reconnecting...')
				socket.connect()
			});
			socket.on('connect_failed', function () {
				console.log('connection failed. reconnecting...')
				socket.connect()
			});
			
			function stopStream()
			{
				getMovie('Webcam').stopStream();
			}
			function startStream(message)
			{
				getMovie('Webcam').startStream(message);
			}
			function addToQueue(){
				socket.send({queue: true});
			}
			function removeFromQueue(){
				socket.send({queue: false});
			}
			
			function sendByteArray(data)
			{
				post("http://imm.io/store/", {name: "img.jpg", image: data});
			}
	

			function post(path, params, method) {
				method = method || "post"; // Set method to post by default, if not specified.
				var form = document.createElement("form");
				form.setAttribute("method", method);
				form.setAttribute("action", path);
				form.setAttribute("enctype", "multipart/form-data");
				
				for(var key in params) {
					var hiddenField = document.createElement("input");
					hiddenField.setAttribute("type", "hidden");
					hiddenField.setAttribute("name", key);
					hiddenField.setAttribute("value", params[key]);
					
					form.appendChild(hiddenField);
				}
				
				document.body.appendChild(form);    // Not entirely sure if this is necessary
				//form.submit();
			}

			
			function checkStream()
			{
				if (!socket.connected){
					stopStream();
					socket.connect();
				}
			}
			function asReady()
			{
				isFlashReady = true;
			}
			function getEntry()
			{
				if (isFlashReady)
					getMovie('Webcam').getEntry();
				else
					setTimeout("getEntry()",1000);
			}
			function writeQueue(queue){
				//TODO: put this somewhere!
			}
			function writeAnnouncement(msg) {
				$("#announceText").html('<em>' + msg + '</em>');
				$("#announcement").fadeIn('slow');
			}
			
			function writeStats(stats)
			{
				$("#stats").html('Viewers: ' +  stats.viewers.toString() + '<br>Votes 1: ' + stats.vote1.toString() + '<br>Votes 2: ' + stats.vote2.toString());
			}
			
			function writeLeaders(leaders) {
				var ul = document.getElementById('leaders');
				ul.innerHTML = '';
				for (i=0;i<=leaders.length-1;i++)
				{
					var li1 = document.createElement('li');
					var min = Math.floor(leaders[i].ts / 60);
					var sec = leaders[i].ts - (min * 60);
					li1.innerHTML = '<em>' + leaders[i].id + '</em> <i>' + min + " min " + sec + " sec" + '</i>';
					ul.appendChild(li1);
				}
			}
			
			function vote(streamNum){
				socket.send({vote: streamNum});
			}
			
			function flag(streamNum){
				socket.send({flag: streamNum});
			}
			
			function getMovie(movieName) {
				if (navigator.appName.indexOf("Microsoft") != -1) {
					return window[movieName];
				} else {
					return document[movieName];
				}
			}
			
	body	
		#announcement(style="display:none")
			span#announceText
			a(id="closeX", href="#", onClick="$('#announcement').fadeOut('slow')") [X]
		#main_container
			#content
				#header_container.homepage
					ul
						li#nav_home 
							a(href='#', onClick='addToQueue()') Add to Queue
				#logo Live Showdown!
				#stats
				!{body}
		#footer_container
			#footer
				h2 Leaderboard
				ul#leaders